plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "com.arenagod.gradle.MybatisGenerator" version "${mybatisGeneratorVersion}"
}

apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        //spring bom helps us to declare dependencies without specifying version numbers.
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // 本地依赖
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':eboot-common')
    implementation project(':eboot-core')

    // spring boot
    implementation(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-security",
            "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisBootVersion}",
            "com.github.pagehelper:pagehelper-spring-boot-starter:${pageHelperVersion}",
            "org.springframework.cloud:spring-cloud-starter-consul-discovery",
            // "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${oauth2Version}",
            "com.alibaba:druid-spring-boot-starter:${druidVersion}"
    )

    // jwt
    implementation("io.jsonwebtoken:jjwt:${jjwtVersion}")

    // 验证码
    implementation("com.baomidou:kaptcha-spring-boot-starter:${kaptchaVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")

    // spring-boot-admin
    implementation("de.codecentric:spring-boot-admin-client:${springBootAdminVersion}")

    // swagger
    implementation(
            "io.springfox:springfox-swagger-ui:${swaggerVersion}",
            "io.springfox:springfox-swagger2:${swaggerVersion}"
    )

    implementation 'org.springframework.boot:spring-boot-actuator'
    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "mysql:mysql-connector-java"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatis/generator/mybatis-generator.xml'
}